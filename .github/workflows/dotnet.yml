name: CI

on: [push]

env:
  ResonitePath: "${{ github.workspace }}/Resonite"

jobs:
  ci:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Get Resonite Infos
        run: |
          {
            echo "APP_INFO<<EOFEOF"
            curl https://api.steamcmd.net/v1/info/2519830
            echo ""
            echo "EOFEOF"
          } >> "$GITHUB_ENV"
      - name: Get Resonite from Cache
        id: cache-resonite
        uses: actions/cache@v3
        with:
          path: "${{ env.ResonitePath }}"
          key: "${{ fromJson( env.APP_INFO ).data['2519830'].depots.branches.public.buildid }}"
      - name: Download Steam
        if: steps.cache-resonite.outputs.cache-hit != 'true'
        uses: CyberAndrii/setup-steamcmd@b786e0da44db3d817e66fa3910a9560cb28c9323
      - name: Download Resonite
        if: steps.cache-resonite.outputs.cache-hit != 'true'
        run: |
          steamcmd '+@sSteamCmdForcePlatformType windows' '+force_install_dir "${{ env.ResonitePath }}"' '+login "${{ secrets.STEAM_USER }}" "${{ secrets.STEAM_TOKEN }}"' '+app_license_request 2519830' '+app_update 2519830 validate' '+quit'
          #The following line makes the cache much much smaller:
          rm -r '${{ env.ResonitePath }}/RuntimeData/PreCache'
      - name: Setup dotnet
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.x'
      - uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget
      - name: Install dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build
      - name: Test
        run: dotnet test
